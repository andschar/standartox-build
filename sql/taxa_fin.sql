-- scripts to aggregate organism habitat and occurrence information

DROP TABLE IF EXISTS taxa.taxa_id2;
CREATE TABLE taxa.taxa_id2 AS (
	SELECT
		ep.*
	FROM taxa.taxa_id id
	LEFT JOIN epa.epa_taxa ep USING (species_number)
);

ALTER TABLE taxa.taxa_id2 ADD PRIMARY KEY (species_number);


-- habitat --------------------------------------------------------------------
DROP TABLE IF EXISTS taxa.taxa_habitat;
CREATE TABLE taxa.taxa_habitat AS (
	SELECT
		id.species_number,
		id.taxon,
		-- NOTE GBIF is not included as many classificaitons seem wrong
		GREATEST(wo.brack, epa_habi.brackish)::boolean AS brack,
		GREATEST(wo.fresh, epa_habi.freshwater, epa_taxa.freshwater)::boolean AS fresh,
		GREATEST(wo.marin, epa_habi.marine, epa_taxa.marine)::boolean AS marin,
		GREATEST(wo.terre, epa_habi.terrestrial, epa_taxa.terrestrial)::boolean AS terre
	FROM taxa.taxa_id id
	LEFT JOIN worms.worms_data wo USING (taxon)
	LEFT JOIN epa.epa_habi epa_habi USING (species_number)
	LEFT JOIN epa.epa_taxa epa_taxa USING (species_number)
);

ALTER TABLE taxa.taxa_habitat ADD PRIMARY KEY (species_number);

-- continent ------------------------------------------------------------------
DROP TABLE IF EXISTS taxa.taxa_continent;
CREATE TABLE taxa.taxa_continent AS (
	SELECT
		id.species_number,
		id.taxon,
		GREATEST(gb.africa) AS africa,
		GREATEST(gb.asia) AS asia,
		GREATEST(gb.europe) AS europe,
		GREATEST(gb.north_america) AS america_north,
		GREATEST(gb.south_america) AS america_south,
		GREATEST(gb.oceania) AS oceania
FROM taxa.taxa_id id
LEFT JOIN gbif.continent gb USING (taxon)
);

ALTER TABLE taxa.taxa_continent ADD PRIMARY KEY (species_number);

-- country --------------------------------------------------------------------
DROP TABLE IF EXISTS taxa.taxa_country;
CREATE TABLE taxa.taxa_country AS (
	SELECT 
		id.species_number,
		id.taxon,
		GREATEST(gb.ad) AS ad,
		GREATEST(gb.ae) AS ae,
		GREATEST(gb.af) AS af,
		GREATEST(gb.ag) AS ag,
		GREATEST(gb.ai) AS ai,
		GREATEST(gb.al) AS al,
		GREATEST(gb.am) AS am,
		GREATEST(gb.ao) AS ao,
		GREATEST(gb.aq) AS aq,
		GREATEST(gb.ar) AS ar,
		GREATEST(gb.as) AS as,
		GREATEST(gb.at) AS at,
		GREATEST(gb.au) AS au,
		GREATEST(gb.aw) AS aw,
		GREATEST(gb.ax) AS ax,
		GREATEST(gb.az) AS az,
		GREATEST(gb.ba) AS ba,
		GREATEST(gb.bb) AS bb,
		GREATEST(gb.bd) AS bd,
		GREATEST(gb.be) AS be,
		GREATEST(gb.bf) AS bf,
		GREATEST(gb.bg) AS bg,
		GREATEST(gb.bh) AS bh,
		GREATEST(gb.bi) AS bi,
		GREATEST(gb.bj) AS bj,
		GREATEST(gb.bl) AS bl,
		GREATEST(gb.bm) AS bm,
		GREATEST(gb.bn) AS bn,
		GREATEST(gb.bo) AS bo,
		GREATEST(gb.bq) AS bq,
		GREATEST(gb.br) AS br,
		GREATEST(gb.bs) AS bs,
		GREATEST(gb.bt) AS bt,
		GREATEST(gb.bv) AS bv,
		GREATEST(gb.bw) AS bw,
		GREATEST(gb.by) AS by,
		GREATEST(gb.bz) AS bz,
		GREATEST(gb.ca) AS ca,
		GREATEST(gb.cc) AS cc,
		GREATEST(gb.cd) AS cd,
		GREATEST(gb.cf) AS cf,
		GREATEST(gb.cg) AS cg,
		GREATEST(gb.ch) AS ch,
		GREATEST(gb.ci) AS ci,
		GREATEST(gb.ck) AS ck,
		GREATEST(gb.cl) AS cl,
		GREATEST(gb.cm) AS cm,
		GREATEST(gb.cn) AS cn,
		GREATEST(gb.co) AS co,
		GREATEST(gb.cr) AS cr,
		GREATEST(gb.cu) AS cu,
		GREATEST(gb.cv) AS cv,
		GREATEST(gb.cw) AS cw,
		GREATEST(gb.cx) AS cx,
		GREATEST(gb.cy) AS cy,
		GREATEST(gb.cz) AS cz,
		GREATEST(gb.de) AS de,
		GREATEST(gb.dj) AS dj,
		GREATEST(gb.dk) AS dk,
		GREATEST(gb.dm) AS dm,
		GREATEST(gb.do) AS do,
		GREATEST(gb.dz) AS dz,
		GREATEST(gb.ec) AS ec,
		GREATEST(gb.ee) AS ee,
		GREATEST(gb.eg) AS eg,
		GREATEST(gb.eh) AS eh,
		GREATEST(gb.er) AS er,
		GREATEST(gb.es) AS es,
		GREATEST(gb.et) AS et,
		GREATEST(gb.fi) AS fi,
		GREATEST(gb.fj) AS fj,
		GREATEST(gb.fk) AS fk,
		GREATEST(gb.fm) AS fm,
		GREATEST(gb.fo) AS fo,
		GREATEST(gb.fr) AS fr,
		GREATEST(gb.ga) AS ga,
		GREATEST(gb.gb) AS gb,
		GREATEST(gb.gd) AS gd,
		GREATEST(gb.ge) AS ge,
		GREATEST(gb.gf) AS gf,
		GREATEST(gb.gg) AS gg,
		GREATEST(gb.gh) AS gh,
		GREATEST(gb.gi) AS gi,
		GREATEST(gb.gl) AS gl,
		GREATEST(gb.gm) AS gm,
		GREATEST(gb.gn) AS gn,
		GREATEST(gb.gp) AS gp,
		GREATEST(gb.gq) AS gq,
		GREATEST(gb.gr) AS gr,
		GREATEST(gb.gs) AS gs,
		GREATEST(gb.gt) AS gt,
		GREATEST(gb.gu) AS gu,
		GREATEST(gb.gw) AS gw,
		GREATEST(gb.gy) AS gy,
		GREATEST(gb.hk) AS hk,
		GREATEST(gb.hm) AS hm,
		GREATEST(gb.hn) AS hn,
		GREATEST(gb.hr) AS hr,
		GREATEST(gb.ht) AS ht,
		GREATEST(gb.hu) AS hu,
		GREATEST(gb.id) AS id,
		GREATEST(gb.ie) AS ie,
		GREATEST(gb.il) AS il,
		GREATEST(gb.im) AS im,
		GREATEST(gb.in) AS in,
		GREATEST(gb.io) AS io,
		GREATEST(gb.iq) AS iq,
		GREATEST(gb.ir) AS ir,
		GREATEST(gb.is) AS is,
		GREATEST(gb.it) AS it,
		GREATEST(gb.je) AS je,
		GREATEST(gb.jm) AS jm,
		GREATEST(gb.jo) AS jo,
		GREATEST(gb.jp) AS jp,
		GREATEST(gb.ke) AS ke,
		GREATEST(gb.kg) AS kg,
		GREATEST(gb.kh) AS kh,
		GREATEST(gb.ki) AS ki,
		GREATEST(gb.km) AS km,
		GREATEST(gb.kn) AS kn,
		GREATEST(gb.kp) AS kp,
		GREATEST(gb.kr) AS kr,
		GREATEST(gb.kw) AS kw,
		GREATEST(gb.ky) AS ky,
		GREATEST(gb.kz) AS kz,
		GREATEST(gb.la) AS la,
		GREATEST(gb.lb) AS lb,
		GREATEST(gb.lc) AS lc,
		GREATEST(gb.li) AS li,
		GREATEST(gb.lk) AS lk,
		GREATEST(gb.lr) AS lr,
		GREATEST(gb.ls) AS ls,
		GREATEST(gb.lt) AS lt,
		GREATEST(gb.lu) AS lu,
		GREATEST(gb.lv) AS lv,
		GREATEST(gb.ly) AS ly,
		GREATEST(gb.ma) AS ma,
		GREATEST(gb.mc) AS mc,
		GREATEST(gb.md) AS md,
		GREATEST(gb.me) AS me,
		GREATEST(gb.mf) AS mf,
		GREATEST(gb.mg) AS mg,
		GREATEST(gb.mh) AS mh,
		GREATEST(gb.mk) AS mk,
		GREATEST(gb.ml) AS ml,
		GREATEST(gb.mm) AS mm,
		GREATEST(gb.mn) AS mn,
		GREATEST(gb.mo) AS mo,
		GREATEST(gb.mp) AS mp,
		GREATEST(gb.mq) AS mq,
		GREATEST(gb.mr) AS mr,
		GREATEST(gb.ms) AS ms,
		GREATEST(gb.mt) AS mt,
		GREATEST(gb.mu) AS mu,
		GREATEST(gb.mv) AS mv,
		GREATEST(gb.mw) AS mw,
		GREATEST(gb.mx) AS mx,
		GREATEST(gb.my) AS my,
		GREATEST(gb.mz) AS mz,
		GREATEST(gb.na) AS na,
		GREATEST(gb.nc) AS nc,
		GREATEST(gb.ne) AS ne,
		GREATEST(gb.nf) AS nf,
		GREATEST(gb.ng) AS ng,
		GREATEST(gb.ni) AS ni,
		GREATEST(gb.nl) AS nl,
		GREATEST(gb.no) AS no,
		GREATEST(gb.np) AS np,
		GREATEST(gb.nr) AS nr,
		GREATEST(gb.nu) AS nu,
		GREATEST(gb.nz) AS nz,
		GREATEST(gb.om) AS om,
		GREATEST(gb.pa) AS pa,
		GREATEST(gb.pe) AS pe,
		GREATEST(gb.pf) AS pf,
		GREATEST(gb.pg) AS pg,
		GREATEST(gb.ph) AS ph,
		GREATEST(gb.pk) AS pk,
		GREATEST(gb.pl) AS pl,
		GREATEST(gb.pm) AS pm,
		GREATEST(gb.pn) AS pn,
		GREATEST(gb.pr) AS pr,
		GREATEST(gb.ps) AS ps,
		GREATEST(gb.pt) AS pt,
		GREATEST(gb.pw) AS pw,
		GREATEST(gb.py) AS py,
		GREATEST(gb.qa) AS qa,
		GREATEST(gb.re) AS re,
		GREATEST(gb.ro) AS ro,
		GREATEST(gb.rs) AS rs,
		GREATEST(gb.ru) AS ru,
		GREATEST(gb.rw) AS rw,
		GREATEST(gb.sa) AS sa,
		GREATEST(gb.sb) AS sb,
		GREATEST(gb.sc) AS sc,
		GREATEST(gb.sd) AS sd,
		GREATEST(gb.se) AS se,
		GREATEST(gb.sg) AS sg,
		GREATEST(gb.sh) AS sh,
		GREATEST(gb.si) AS si,
		GREATEST(gb.sj) AS sj,
		GREATEST(gb.sk) AS sk,
		GREATEST(gb.sl) AS sl,
		GREATEST(gb.sm) AS sm,
		GREATEST(gb.sn) AS sn,
		GREATEST(gb.so) AS so,
		GREATEST(gb.sr) AS sr,
		GREATEST(gb.ss) AS ss,
		GREATEST(gb.st) AS st,
		GREATEST(gb.sv) AS sv,
		GREATEST(gb.sx) AS sx,
		GREATEST(gb.sy) AS sy,
		GREATEST(gb.sz) AS sz,
		GREATEST(gb.tc) AS tc,
		GREATEST(gb.td) AS td,
		GREATEST(gb.tf) AS tf,
		GREATEST(gb.tg) AS tg,
		GREATEST(gb.th) AS th,
		GREATEST(gb.tj) AS tj,
		GREATEST(gb.tk) AS tk,
		GREATEST(gb.tl) AS tl,
		GREATEST(gb.tm) AS tm,
		GREATEST(gb.tn) AS tn,
		GREATEST(gb.to) AS to,
		GREATEST(gb.tr) AS tr,
		GREATEST(gb.tt) AS tt,
		GREATEST(gb.tv) AS tv,
		GREATEST(gb.tw) AS tw,
		GREATEST(gb.tz) AS tz,
		GREATEST(gb.ua) AS ua,
		GREATEST(gb.ug) AS ug,
		GREATEST(gb.um) AS um,
		GREATEST(gb.us) AS us,
		GREATEST(gb.uy) AS uy,
		GREATEST(gb.uz) AS uz,
		GREATEST(gb.vc) AS vc,
		GREATEST(gb.ve) AS ve,
		GREATEST(gb.vg) AS vg,
		GREATEST(gb.vi) AS vi,
		GREATEST(gb.vn) AS vn,
		GREATEST(gb.vu) AS vu,
		GREATEST(gb.wf) AS wf,
		GREATEST(gb.ws) AS ws,
		GREATEST(gb.xk) AS xk,
		GREATEST(gb.ye) AS ye,
		GREATEST(gb.yt) AS yt,
		GREATEST(gb.za) AS za,
		GREATEST(gb.zm) AS zm,
		GREATEST(gb.zw) AS zw,
		GREATEST(gb.zz) AS zz
	FROM taxa.taxa_id id
	LEFT JOIN gbif.country_code gb USING (taxon)
);

ALTER TABLE taxa.taxa_country ADD PRIMARY KEY (species_number);



